"use strict";

// Створюю клас StringBuilder, який буде використовуватися для створення рядків
  class StringBuilder {

// оголошую приватну властивість
//вона зберігає поточний рядок який буде змінюватися методами класу
  #value;

// конструктор приймає значення- це спіціальний метод який викликається при створенні нового екземпляра класу
// і він автоматично викликається при створенні нового екземпляра класу 
//параметр initialValue -дозволяє задати початкове значення для об'єкта.
  constructor(initialValue) {

// ініціалізую приватну властивість value значенням параметра initialValue
  this.#value = initialValue;
  }
  
// метод повертає значення приватної властивості value Також надає доступ до значення
// екземпляра класу, який його викликає Але не дає доступу до самої властивості value
// щоб захистити її від зміни ззовні
  getValue() {
    return this.#value;
  }

// метод додає значення в кінець рядка. Тут я просто додаю значення str до значення value
// за допомогою оператора +. Це дозволяє зберегти попереднє значення value і додати до нього нове значення str.Тут наблюдається конкатенація рядків тобто з'єднання рядків

  padEnd(str) {
    this.#value = this.#value + str;
  }

// метод додає переданий рядок на початок поточного рядка.Новий рядок str формується шляхом конкатенації str і значення value.
  padStart(str) {
    this.#value = str + this.#value;
  }

// метод додає значення на початок і в кінець рядка. При цьому значення str конкатенується з обох боків значення value.Таким чином формується новий рядок, який зберігається в приватній властивості value.
  padBoth(str) {
    this.padStart(str);// додає на початок рядка str.ЦЕ ЗБЕРЕЖЕНЕ ЗНАЧЕННЯ МЕТОДУ padStart
    this.padEnd(str);// додає на кінець рядка str.ЦЕ ЗБЕРЕЖЕНЕ ЗНАЧЕННЯ МЕТОДУ padEnd
  }
}

//тут я створюю новий екземпляр класу StringBuilder і передаю в конструктор рядок "."
// Це значення буде збережено в приватній властивості value екземпляра класу builder
  const builder = new StringBuilder(".");
  
// тут я викликаю метод getValue() для отримання значення приватної властивості value
  console.log(builder.getValue()); // "."
  
// тут я оголошую і викликаю метод padStart() через об'єкт builder.І через console.log виводжу значення
  builder.padStart("^");
  console.log(builder.getValue()); // "^."
// тут я оголошую і викликаю метод padEnd() через об'єкт builder.І через console.log виводжу значення
  builder.padEnd("^");
  console.log(builder.getValue()); // "^.^"
// тут я оголошую і викликаю метод padBoth() через об'єкт builder.І через console.log виводжу значення
  builder.padBoth("=");
  console.log(builder.getValue()); // "=^.^="
